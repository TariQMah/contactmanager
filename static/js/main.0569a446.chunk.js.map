{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/addContact.js","components/contacts/editContacts.js","components/layout/Header.js","components/pages/about.js","components/pages/notFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","protoTypes","PropTypes","string","isRequired","func","defaultProps","addContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","editContacts","updateObj","match","params","put","Header","branding","href","about","notFound","test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","About","AddContact","EditContact","patch","Test","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0569a446.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {\"\"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-edit\"\r\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        value={value}\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.protoTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass addContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-block btn-light\"\r\n                    value=\"Add Contact\"\r\n                    type=\"submit\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default addContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass editContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          phone: \"Name is Required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updateObj = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateObj\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-block btn-light\"\r\n                    value=\"Update Contact\"\r\n                    type=\"submit\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default editContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                Add Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nconst headingStyles = {\r\n  color: \"green\",\r\n  fontSize: \"20px\"\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">Hello About</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  //   componentWillMount() {\r\n  //     console.log(\"Component Will Mount\");\r\n  //   }\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"Component componentDidUpdate\");\r\n  //   }\r\n\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"Component componentWillReceiveProps\");\r\n  //   }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div className=\"\">\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/addContact\";\nimport EditContact from \"./components/contacts/editContacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/about\";\nimport notFound from \"./components/pages/notFound\";\n\nimport Test from \"./components/test/test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager1\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact patch=\"/test\" component={Test} />\n                <Route component={notFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}